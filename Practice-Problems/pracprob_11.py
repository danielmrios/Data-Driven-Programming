# -*- coding: utf-8 -*-
"""PracProb_11

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11A2sfRXlpF38afMz89nuB1seIGYHloh9
"""

from google.colab import files
uploaded = files.upload()

my_file = open('pride.txt')
my_string = my_file.read()
my_string = my_string.replace('\n', '')
spec_char = [';', ':','?','!','$','(',')',',','"','.']
#define spec_char as a list of special characters
for i in spec_char:
#The for loop replaces any special character defined in spec_char from my_string
#with a blank character
    my_string = my_string.replace(i,'')
my_string = my_string.lower() #convert string to lowercase

my_list = my_string.split() #convert string to separated list

#word_count is a dictionary that goes through the words in the list and counts
#how many times that word occurs. It is not sorted, it simply goes word by word
#and outputs a running count of the words. The loop asigns 1 to any word that
#occurs once and adds 1 for each occurrence of a word
word_count = {}
for word in my_list:
  word = word.lower()
  if word in word_count:
    word_count[word] += 1
  else:
    word_count[word] = 1



def get_freq(item):
  return item[1]
#index the items by reading the frequency of each item in word_count
sorted_freq = sorted(word_count.items(), key=get_freq, reverse=True)
#sort the dictionary of word_count with reverse sort so highest frequency is first
max_occur = {word: count for word, count in sorted_freq if 1 <= len(word)}
#create a new dictionary which is the sorted form of word_count, ordered in
#descending order of how frequent a word occurs.

print(word_count)
print(max_occur)