# -*- coding: utf-8 -*-
"""PracProb_10

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aVNZBjHb7HcGDxHNiFfQ1vJSLQ1c1nlj
"""

from google.colab import files
uploaded = files.upload()

'''
@FileName: PracProb_10.py
@Authors: Adil Shafqat, Daniel Rios, Qianxun Tu
@Team: Team 8
@Description: The program reads the uploaded text and scans it for every 3-letter
word combination. It then outputs the 3 letter combination that occurs the most
often, as well as how many times that combination occurs.
@DateCreated: 10/18/2023
@Version: 1.00
'''
my_file = open('pride.txt')
my_string = my_file.read()
my_string = my_string.replace(" ", "")
my_string = my_string.replace("\n","")
max_substring = "" #initialize max_substring to blank
max_count=0 #initialize max count to 0
for i in range(len(my_string) - 2):
  #The program reads the string from the start until the last 2 characters as
  #there can be no 3 letter characters that start after the last 2
  current_substring = my_string[i:i+3]
  #[i:i+3] restricts to 3 letter words
  current_count = my_string[i+3:].count(current_substring)
  #We assign current count with how many times the i+3 word occurs

  if current_count > max_count:
    max_substring = current_substring
    #we replace max_substring with current_substring if its count is greater than
    #the previous max count
    max_count = current_count
    #we then replace the max count with the new current_substrings count
    #Finally we print the max_substring and the max_count
print(f"The most occurring substring is '{max_substring}' which occurs {max_count} times.")