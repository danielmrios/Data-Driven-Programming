# -*- coding: utf-8 -*-
"""PracProb_21_part2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13dj-8msewj3RNM4llo2qMuIvkhe48l0u
"""

'''
@filename: PracProb_21_part2.py
@authors: Adil Shafqat, Qianxun Tu, Daniel Rios
@description: the program creates a class called travel which takes speed,
fuel efficiency, and distance. It outputs the total cost and total time for
the travel, and prints the results in dollars and hours and minutes.
@date: 11/20/2023
@version: 1.00
'''

#create class for travel
class travel:

#class attribute is cost_per_gallon
  cost_per_gallon = 5.3

#instance attributes
  def __init__(self, mph, mpg, dist):
    self.mph = mph
    self.mpg = mpg
    self.dist = dist

#define travel_time as total time travelled, and call accomodation within it.
#if accomodation returns true, add 10 hours to total time
  def travel_time(self):
    total_time = self.dist / self.mph
    if self.accomodation(total_time):
      total_time += 10
    return total_time

#define travel_cost as total cost for travel, and call accomodation within it.
#if accomodation returns true, add 100 dollars to total cost
  def travel_cost(self):
    total_cost = (self.dist / self.mpg) * self.cost_per_gallon
    if self.accomodation(self.dist / self.mph):
      total_cost += 100
    return total_cost

#define accomodation to return true if travel time is over 8 hours, otherwise false
  def accomodation(self, travel_time):
    if travel_time > 8:
      return True
    else:
      return False

#define time_format to format time in hours and minutes as integers
def time_format(hours):
  total_mins = hours * 60
  mins = int(total_mins % 60)
  hours = int(hours)
  return f"{hours} hours and {mins} minutes"

#test by calling function with parameters 60, 25, 500. Print total cost and total time
#in dollars, and hours and minutes
my_travel = travel(60, 25, 500)
print(f"Total cost of travel is ${my_travel.travel_cost():.2f}, total travel time is {time_format(my_travel.travel_time())}")